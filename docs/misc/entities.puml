@startuml

class VehicleType {
    +id
    +type: string
    +name: string
    +description: string
    +content: json
}

class Vehicle {
    +id
    +type: string
    +description: string
    +content: json
    +engineMax: number
    +engineLoad: number
    +engineFuel: number
    +auxMax: number
    +auxLoad: number
    +auxFuel: number
    +speed: number
}

Vehicle --> VehicleType: type

class PlaceType {
    +id
    +type: string
    +name: string
    +description: string
    +content: string
}

class Place {
    +id
    +type: string
    +name: string
    +description: string
    lat: number
    long: number
}

Place --> PlaceType: type

class PlaceConnection {
    +id
    +type: string
    +name: string
    +description: string
    +content: json
    +start: Place
    +end: Place
}

PlaceConnection --> Place: start, end

class Job {
    +id
    +type: string
    +name: string
    +description: string
    +start: Place
    +end: Place
    +load: number # number of containers in load
    +payType: string # gold, tokens, crates, materials
    +pay: number
    +startTime: Date # date when job taken
}

class VehicleInstance {
    +id
    +name: string
    +vehicle: Vehicle
    +jobs: Jobs*
    +start: Place
    +end: Place
    +startTime: Date
    +endTime: Date
}

VehicleInstance --> Place: start, end
VehicleInstance --> Vehicle: vehicle
VehicleInstance --* Job: jobs

class PlaceInstance {
    +id
    +place: Place
    +jobs: Jobs*
    +jobOffers: Jobs*
    +jobOfferExpiry: Date
}

PlaceInstance --> Place: place
PlaceInstance --* Job: jobs
PlaceInstance --* Job: jobOffers

class Map {
    +id
    +name
    +description
    +connections: PlaceConnection* // join table
    +places: Place* // join table
}

Map --* PlaceConnection: connections
Map --* Place: places

class PlaceConnectionInstance {
    +id
    +connection: PlaceConnection
}

PlaceConnectionInstance --> PlaceConnection: connection

class Player {
    +id
    +name: string
    +user: User
    +description: string
    +vehicleInstances: VehicleInstance*
    +placeInstances: PlaceInstance*
    +connectionInstances: PlaceConnectionInstance*
    +map: Map
}

Player --> User: user
Player --* PlaceInstance: placeInstances
Player --* VehicleInstance: vehicleInstances
Player --* PlaceConnectionInstance: connectionInstances
Player *--> Map: map

@enduml
